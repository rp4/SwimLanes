System.register([],function(e,t){"use strict";return{execute:function(){var e=document.createElement("style");e.textContent="*{margin:0;padding:0;box-sizing:border-box}body{font-family:Segoe UI,Tahoma,Geneva,Verdana,sans-serif;background:linear-gradient(135deg,#667eea,#764ba2);min-height:100vh;display:flex;align-items:center;justify-content:center}.pool-container{width:95vw;height:95vh;background:#fff;border-radius:20px;box-shadow:0 20px 60px rgba(0,0,0,.3);overflow:hidden;display:flex;flex-direction:column}.pool-header{background:linear-gradient(90deg,#1e88e5,#1565c0);color:#fff;padding:20px;text-align:center;position:relative;overflow:hidden}.pool-header h1{font-size:28px;text-shadow:2px 2px 4px rgba(0,0,0,.2);z-index:2;position:relative}.wave-decoration{position:absolute;bottom:0;left:0;width:100%;height:20px;background:url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1200 20'%3E%3Cpath d='M0,10 Q300,0 600,10 T1200,10 L1200,20 L0,20 Z' fill='white' opacity='0.3'/%3E%3C/svg%3E\");background-size:100% 100%;animation:wave 3s linear infinite}@keyframes wave{0%{transform:translate(0)}to{transform:translate(-50%)}}.main-pool{flex:1;display:flex;flex-direction:column;background:#f0f9ff}.toolbar{background:linear-gradient(180deg,#e1f5fe,#b3e5fc);padding:15px;display:flex;gap:20px;flex-wrap:wrap;border-bottom:2px solid #81d4fa;box-shadow:0 2px 10px rgba(0,0,0,.1)}.tool-group{display:flex;gap:10px;padding:0 10px;border-right:2px solid #4fc3f7}.tool-group:last-child{border-right:none}.pool-btn{background:linear-gradient(135deg,#42a5f5,#1e88e5);color:#fff;border:none;padding:10px 15px;border-radius:25px;cursor:pointer;display:flex;align-items:center;gap:5px;font-size:14px;font-weight:500;transition:all .3s ease;box-shadow:0 4px 6px rgba(0,0,0,.1)}.pool-btn:hover{transform:translateY(-2px);box-shadow:0 6px 12px rgba(0,0,0,.2);background:linear-gradient(135deg,#64b5f6,#42a5f5)}.pool-btn:active{transform:translateY(0);box-shadow:0 2px 4px rgba(0,0,0,.2)}.pool-btn.secondary{background:linear-gradient(135deg,#81c784,#66bb6a)}.pool-btn.danger{background:linear-gradient(135deg,#ef5350,#e53935)}.pool-btn .icon{font-size:18px}.diagram-area{flex:1;overflow:hidden;background:linear-gradient(180deg,#e0f7fa,#b2ebf2,#80deea);position:relative}.diagram-area:before{content:\"\";position:absolute;top:0;left:0;right:0;height:15px;background:linear-gradient(90deg,#fff,#fff 10px,#e0e0e0 10px,#e0e0e0 20px,#fff 20px,#fff 30px,#e0e0e0 30px,#e0e0e0 40px);background-size:40px 100%;box-shadow:0 2px 4px rgba(0,0,0,.2);z-index:10}.diagram-area:after{content:\"\";position:absolute;bottom:0;left:0;right:0;height:15px;background:linear-gradient(90deg,#fff,#fff 10px,#e0e0e0 10px,#e0e0e0 20px,#fff 20px,#fff 30px,#e0e0e0 30px,#e0e0e0 40px);background-size:40px 100%;box-shadow:0 -2px 4px rgba(0,0,0,.2);z-index:10}.drop-zone{position:absolute;top:0;right:0;bottom:0;left:0;display:flex;align-items:center;justify-content:center;background:radial-gradient(circle at center,rgba(129,212,250,.3),rgba(3,169,244,.1));border:3px dashed #29b6f6;border-radius:20px;margin:20px;transition:all .3s ease}.drop-zone.drag-over{background:radial-gradient(circle at center,rgba(129,212,250,.5),rgba(3,169,244,.3));border-color:#0288d1;transform:scale(.98)}.drop-content{text-align:center;position:relative}.water-ripple{position:absolute;width:200px;height:200px;border:2px solid #29b6f6;border-radius:50%;left:50%;top:50%;transform:translate(-50%,-50%);animation:ripple 2s linear infinite;opacity:0}@keyframes ripple{0%{width:100px;height:100px;opacity:1}to{width:300px;height:300px;opacity:0}}@keyframes waterShimmer{0%{opacity:.3}50%{opacity:.6}to{opacity:.3}}@keyframes waterFlow{0%{transform:translate(0) translateY(0)}50%{transform:translate(-5px) translateY(2px)}to{transform:translate(0) translateY(0)}}.water-shimmer{animation:waterShimmer 3s ease-in-out infinite}.water-flow{animation:waterFlow 4s ease-in-out infinite}.depth-marker{fill:#0d47a1;font-size:14px;font-weight:700;opacity:.7}.pool-edge{stroke:#bdbdbd;stroke-width:6;fill:none;filter:drop-shadow(4px 4px 6px rgba(0,0,0,.3))}.starting-block{fill:#616161;stroke:#424242;stroke-width:2}.starting-block-number{fill:#fff;font-size:20px;font-weight:700;text-anchor:middle}.drop-icon{font-size:72px;display:block;margin-bottom:20px;animation:float 3s ease-in-out infinite}@keyframes float{0%,to{transform:translateY(0)}50%{transform:translateY(-10px)}}.drop-content h2{color:#1565c0;font-size:32px;margin-bottom:10px}.drop-content p{color:#42a5f5;font-size:18px;margin-bottom:20px}.swimlane-canvas{width:100%;height:100%;position:relative;overflow:auto;background:linear-gradient(180deg,#e1f5fe,#b3e5fc);padding:20px;box-shadow:inset 0 0 20px rgba(0,0,0,.1)}.modal{position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,.5);display:flex;align-items:center;justify-content:center;z-index:1000;backdrop-filter:blur(5px)}.modal-content{background:#fff;border-radius:20px;width:90%;max-width:500px;box-shadow:0 10px 40px rgba(0,0,0,.3);overflow:hidden;animation:modalSlideIn .3s ease}@keyframes modalSlideIn{0%{transform:translateY(-50px);opacity:0}to{transform:translateY(0);opacity:1}}.modal-header{background:linear-gradient(90deg,#1e88e5,#1565c0);color:#fff;padding:20px;display:flex;justify-content:space-between;align-items:center}.modal-header h3{font-size:24px}.close-btn{background:none;border:none;color:#fff;font-size:28px;cursor:pointer;transition:transform .3s ease}.close-btn:hover{transform:rotate(90deg)}.modal-body{padding:30px}.form-group{margin-bottom:20px}.form-group label{display:block;margin-bottom:8px;color:#1565c0;font-weight:500}.pool-input,.pool-select{width:100%;padding:12px;border:2px solid #b3e5fc;border-radius:10px;font-size:16px;transition:border-color .3s ease;background:#f0f9ff}.pool-input:focus,.pool-select:focus{outline:none;border-color:#29b6f6;background:#fff}.modal-footer{background:#f0f9ff;padding:20px;display:flex;gap:10px;justify-content:flex-end}.swimlane{fill:url(#laneGradient);stroke:#1976d2;stroke-width:2;filter:url(#waterEffect)}.lane-divider{stroke:#fff;stroke-width:4;stroke-dasharray:none;opacity:.9;filter:drop-shadow(2px 2px 2px rgba(0,0,0,.3))}.lane-rope{fill:#ff5722;opacity:.9}.lane-rope-blue{fill:#2196f3;opacity:.9}.lane-rope-yellow{fill:#ffc107;opacity:.9}.lane-label{fill:#0d47a1;font-size:18px;font-weight:700;text-anchor:middle}.process-node{cursor:move;transition:all .3s ease}.process-node:hover{filter:brightness(1.1);transform:scale(1.05)}.node-start{fill:#4caf50}.node-process{fill:#2196f3}.node-decision{fill:#ff9800}.node-end{fill:#f44336}.node-text{fill:#fff;font-size:14px;text-anchor:middle;pointer-events:none;font-weight:500}.connection-line{stroke:#1565c0;stroke-width:2;fill:none;marker-end:url(#arrowhead)}.connection-label{fill:#0d47a1;font-size:12px;text-anchor:middle;background:#fff;padding:2px 4px}#diagramSvg{background:url(#poolTiles);border:8px solid #e0e0e0;border-radius:4px;box-shadow:inset 0 0 30px rgba(0,100,200,.2)}.node-dragging{opacity:.7;cursor:grabbing!important}.connection-preview{stroke:#ff5722;stroke-width:2;stroke-dasharray:5,5;fill:none;pointer-events:none;animation:dash .5s linear infinite}@keyframes dash{to{stroke-dashoffset:-10}}.resize-handle{cursor:ew-resize;fill:transparent;stroke:#ffc107;stroke-width:3}.resize-handle:hover{stroke:#ff9800;stroke-width:4}\n/*$vite$:1*/",document.head.appendChild(e);class t{constructor(){this.defaultNodeTypes=["start","process","decision","end"],this.nodeIcons={start:"🏁",process:"🏊",decision:"🤿",end:"🏆"}}validateJSON(e){const t=[];return e?(e.lanes&&Array.isArray(e.lanes)?e.lanes.forEach((e,n)=>{e.id||t.push(`Lane at index ${n} missing "id" property`),e.name||t.push(`Lane at index ${n} missing "name" property`),e.nodes&&!Array.isArray(e.nodes)?t.push(`Lane "${e.name||n}" has invalid "nodes" property`):e.nodes&&e.nodes.forEach((o,i)=>{o.id||t.push(`Node at index ${i} in lane "${e.name||n}" missing "id" property`),o.text||t.push(`Node at index ${i} in lane "${e.name||n}" missing "text" property`)})}):t.push('JSON must contain a "lanes" array'),e.connections&&!Array.isArray(e.connections)?t.push("Connections must be an array"):e.connections&&e.connections.forEach((e,n)=>{e.from||t.push(`Connection at index ${n} missing "from" property`),e.to||t.push(`Connection at index ${n} missing "to" property`)}),{valid:0===t.length,errors:t}):(t.push("JSON data is empty"),{valid:!1,errors:t})}parseProcess(e){const t=this.validateJSON(e);if(!t.valid)throw new Error("Invalid JSON: "+t.errors.join(", "));const n={title:e.title||"Untitled Process",lanes:[],connections:e.connections||[],metadata:e.metadata||{}};return e.lanes.forEach((e,t)=>{const o={id:e.id||`lane_${t}`,name:e.name||`Lane ${t+1}`,color:e.color||this.generateLaneColor(t),nodes:[],position:e.position||{y:150*t+50},height:e.height||140};e.nodes&&e.nodes.forEach((e,n)=>{o.nodes.push(this.parseNode(e,n,t))}),n.lanes.push(o)}),n}parseNode(e,t,n){const o={x:200*t+150,y:150*n+100};return{id:e.id||`node_${n}_${t}`,text:e.text||"Node",type:e.type||"process",position:e.position||o,color:e.color||this.getNodeColor(e.type),icon:this.nodeIcons[e.type]||"🏊",metadata:e.metadata||{}}}generateLaneColor(e){const t=["#64b5f6","#4fc3f7","#29b6f6","#03a9f4","#039be5","#0288d1"];return t[e%t.length]}getNodeColor(e){return{start:"#4caf50",process:"#2196f3",decision:"#ff9800",end:"#f44336"}[e]||"#2196f3"}loadFromFile(e){return new Promise((t,n)=>{const o=new FileReader;o.onload=e=>{try{const n=JSON.parse(e.target.result),o=this.parseProcess(n);t(o)}catch(o){n(new Error("Failed to parse JSON: "+o.message))}},o.onerror=()=>{n(new Error("Failed to read file"))},o.readAsText(e)})}generateSampleProcess(){return{title:"Sample Swimming Pool Maintenance Process",lanes:[{id:"lane_1",name:"Pool Owner",color:"#64b5f6",nodes:[{id:"node_1",text:"Notice Pool Issues",type:"start",position:{x:100,y:50}},{id:"node_2",text:"Submit Request",type:"process",position:{x:300,y:50}},{id:"node_7",text:"Approve Work",type:"decision",position:{x:700,y:50}}]},{id:"lane_2",name:"Pool Service",color:"#4fc3f7",nodes:[{id:"node_3",text:"Receive Request",type:"process",position:{x:300,y:200}},{id:"node_4",text:"Inspect Pool",type:"process",position:{x:500,y:200}},{id:"node_5",text:"Perform Service",type:"process",position:{x:700,y:200}}]},{id:"lane_3",name:"Quality Check",color:"#29b6f6",nodes:[{id:"node_6",text:"Test Water Quality",type:"process",position:{x:900,y:350}},{id:"node_8",text:"Complete",type:"end",position:{x:1100,y:350}}]}],connections:[{from:"node_1",to:"node_2",label:"Report"},{from:"node_2",to:"node_3",label:"Request"},{from:"node_3",to:"node_4",label:"Schedule"},{from:"node_4",to:"node_5",label:"Issues Found"},{from:"node_5",to:"node_7",label:"Review"},{from:"node_7",to:"node_6",label:"Approved"},{from:"node_6",to:"node_8",label:"Pass"}]}}}window.ProcessParser=t;class n{constructor(e){this.svg=e,this.swimlanesGroup=this.svg.querySelector("#swimlanes"),this.nodesGroup=this.svg.querySelector("#nodes"),this.connectionsGroup=this.svg.querySelector("#connections"),this.scale=1,this.translateX=0,this.translateY=0,this.processData=null,this.selectedNode=null,this.selectedLane=null,this.setupArrowMarker()}setupArrowMarker(){const e=this.svg.querySelector("defs"),t=document.createElementNS("http://www.w3.org/2000/svg","marker");t.setAttribute("id","arrowhead"),t.setAttribute("markerWidth","10"),t.setAttribute("markerHeight","10"),t.setAttribute("refX","9"),t.setAttribute("refY","3"),t.setAttribute("orient","auto");const n=document.createElementNS("http://www.w3.org/2000/svg","polygon");n.setAttribute("points","0 0, 10 3, 0 6"),n.setAttribute("fill","#1565c0"),t.appendChild(n),e.appendChild(t)}createLaneRope(e,t){const n=document.createElementNS("http://www.w3.org/2000/svg","g");for(let i=20;i<=1420;i+=20){const e=document.createElementNS("http://www.w3.org/2000/svg","circle");e.setAttribute("cx",i),e.setAttribute("cy",t),e.setAttribute("r","6"),i/20%3==0?e.classList.add("lane-rope-blue"):i/20%3==1?e.classList.add("lane-rope"):e.classList.add("lane-rope-yellow"),n.appendChild(e)}const o=document.createElementNS("http://www.w3.org/2000/svg","line");o.setAttribute("x1","20"),o.setAttribute("y1",t),o.setAttribute("x2","1420"),o.setAttribute("y2",t),o.classList.add("lane-divider"),n.appendChild(o),e.appendChild(n)}addDepthMarkers(){const e=[200,500,900,1300];["3FT","5FT","8FT","12FT"].forEach((t,n)=>{const o=document.createElementNS("http://www.w3.org/2000/svg","text");o.setAttribute("x",e[n]),o.setAttribute("y","25"),o.classList.add("depth-marker"),o.textContent=t,this.swimlanesGroup.appendChild(o)})}render(e){this.processData=e,this.clear(),this.renderSwimLanes(),this.renderNodes(),this.renderConnections(),this.fitToScreen()}clear(){this.swimlanesGroup.innerHTML="",this.nodesGroup.innerHTML="",this.connectionsGroup.innerHTML=""}renderSwimLanes(){let e=50;const t=document.createElementNS("http://www.w3.org/2000/svg","rect");t.setAttribute("x","10"),t.setAttribute("y","30"),t.setAttribute("width","1420"),t.setAttribute("height","10"),t.classList.add("pool-edge"),t.style.fill="#e0e0e0",this.swimlanesGroup.appendChild(t),this.addDepthMarkers(),this.processData.lanes.forEach((t,n)=>{const o=document.createElementNS("http://www.w3.org/2000/svg","g");o.setAttribute("data-lane-id",t.id),o.classList.add("lane-group");const i=document.createElementNS("http://www.w3.org/2000/svg","rect");i.setAttribute("x","20"),i.setAttribute("y",e),i.setAttribute("width","1400"),i.setAttribute("height",t.height||140),i.setAttribute("rx","2"),i.setAttribute("ry","2"),i.style.fill="url(#waterGradient)",i.style.opacity="0.3",i.classList.add("water-flow"),o.appendChild(i);const s=document.createElementNS("http://www.w3.org/2000/svg","rect");s.setAttribute("x","20"),s.setAttribute("y",e),s.setAttribute("width","1400"),s.setAttribute("height",t.height||140),s.setAttribute("rx","2"),s.setAttribute("ry","2"),s.classList.add("swimlane"),s.style.fill=t.color+"20",s.style.stroke=t.color,s.style.filter="url(#poolReflection)";const r=document.createElementNS("http://www.w3.org/2000/svg","rect");r.setAttribute("x","5"),r.setAttribute("y",e+(t.height||140)/2-20),r.setAttribute("width","15"),r.setAttribute("height","40"),r.classList.add("starting-block"),o.appendChild(r);const a=document.createElementNS("http://www.w3.org/2000/svg","text");a.setAttribute("x","12"),a.setAttribute("y",e+(t.height||140)/2+5),a.classList.add("starting-block-number"),a.textContent=n+1,o.appendChild(a);const d=document.createElementNS("http://www.w3.org/2000/svg","text");d.setAttribute("x","40"),d.setAttribute("y",e+30),d.classList.add("lane-label"),d.textContent=t.name,n>0&&this.createLaneRope(o,e-5);const l=document.createElementNS("http://www.w3.org/2000/svg","rect");l.setAttribute("x","1415"),l.setAttribute("y",e+(t.height||140)/2-20),l.setAttribute("width","10"),l.setAttribute("height","40"),l.classList.add("resize-handle"),l.setAttribute("data-lane-id",t.id),o.appendChild(s),o.appendChild(d),o.appendChild(l),this.swimlanesGroup.appendChild(o),t.y=e,e+=(t.height||140)+10});const n=document.createElementNS("http://www.w3.org/2000/svg","rect");n.setAttribute("x","10"),n.setAttribute("y",e),n.setAttribute("width","1420"),n.setAttribute("height","10"),n.classList.add("pool-edge"),n.style.fill="#e0e0e0",this.swimlanesGroup.appendChild(n),this.svg.setAttribute("viewBox",`0 0 1440 ${e+50}`)}renderNodes(){this.processData.lanes.forEach(e=>{e.nodes.forEach(t=>{const n=document.createElementNS("http://www.w3.org/2000/svg","g");let o;n.setAttribute("data-node-id",t.id),n.setAttribute("data-lane-id",e.id),n.classList.add("process-node"),n.style.cursor="move";const i=t.position.x,s=e.y+70;switch(t.position.y=s,t.type){case"start":case"end":o=document.createElementNS("http://www.w3.org/2000/svg","circle"),o.setAttribute("cx",i),o.setAttribute("cy",s),o.setAttribute("r","35");break;case"decision":o=document.createElementNS("http://www.w3.org/2000/svg","polygon");const e=`${i},${s-35} ${i+35},${s} ${i},${s+35} ${i-35},${s}`;o.setAttribute("points",e);break;default:o=document.createElementNS("http://www.w3.org/2000/svg","rect"),o.setAttribute("x",i-50),o.setAttribute("y",s-25),o.setAttribute("width","100"),o.setAttribute("height","50"),o.setAttribute("rx","25"),o.setAttribute("ry","25")}o.classList.add(`node-${t.type}`),o.style.fill=t.color||this.getNodeColor(t.type),o.style.stroke="white",o.style.strokeWidth="2";const r=document.createElementNS("http://www.w3.org/2000/svg","text");r.setAttribute("x",i),r.setAttribute("y",s-10),r.classList.add("node-text"),r.style.fontSize="20px",r.textContent=t.icon;const a=document.createElementNS("http://www.w3.org/2000/svg","text");a.setAttribute("x",i),a.setAttribute("y",s+10),a.classList.add("node-text"),a.style.fontSize="12px",a.textContent=t.text,n.appendChild(o),n.appendChild(r),n.appendChild(a),this.nodesGroup.appendChild(n)})})}renderConnections(){this.processData.connections.forEach(e=>{const t=this.findNode(e.from),n=this.findNode(e.to);if(t&&n){const o=this.calculatePath(t,n),i=document.createElementNS("http://www.w3.org/2000/svg","path");if(i.setAttribute("d",o),i.classList.add("connection-line"),i.setAttribute("marker-end","url(#arrowhead)"),i.setAttribute("data-from",e.from),i.setAttribute("data-to",e.to),e.label){const o=this.getPathMidpoint(t,n),i=document.createElementNS("http://www.w3.org/2000/svg","text");i.setAttribute("x",o.x),i.setAttribute("y",o.y-5),i.classList.add("connection-label"),i.textContent=e.label,this.connectionsGroup.appendChild(i)}this.connectionsGroup.appendChild(i)}})}calculatePath(e,t){const n=e.position.x,o=e.position.y,i=t.position.x,s=t.position.y,r=i-n,a=s-o;let d=n,l=o,c=i,h=s;return Math.abs(r)>Math.abs(a)?(d+=r>0?35:-35,c+=r>0?-35:35):(l+=a>0?35:-35,h+=a>0?-35:35),`M ${d} ${l} C ${d+.5*(c-d)} ${l}, ${d+.5*(c-d)} ${h}, ${c} ${h}`}getPathMidpoint(e,t){return{x:(e.position.x+t.position.x)/2,y:(e.position.y+t.position.y)/2}}findNode(e){for(const t of this.processData.lanes){const n=t.nodes.find(t=>t.id===e);if(n)return n}return null}findLane(e){return this.processData.lanes.find(t=>t.id===e)}getNodeColor(e){return{start:"#4caf50",process:"#2196f3",decision:"#ff9800",end:"#f44336"}[e]||"#2196f3"}fitToScreen(){const e=this.svg.getBBox(),t=`${e.x-20} ${e.y-20} ${e.width+40} ${e.height+40}`;this.svg.setAttribute("viewBox",t)}zoom(e){const t=this.svg.getAttribute("viewBox")||"0 0 1440 800",[n,o,i,s]=t.split(" ").map(Number),r=i/e,a=s/e,d=n+i/2-r/2,l=o+s/2-a/2;this.svg.setAttribute("viewBox",`${d} ${l} ${r} ${a}`)}pan(e,t){const n=this.svg.getAttribute("viewBox")||"0 0 1440 800",[o,i,s,r]=n.split(" ").map(Number),a=o-e*(s/this.svg.clientWidth),d=i-t*(r/this.svg.clientHeight);this.svg.setAttribute("viewBox",`${a} ${d} ${s} ${r}`)}applyTransform(){}addLane(e){const t={id:`lane_${Date.now()}`,name:e||`New Lane ${this.processData.lanes.length+1}`,color:this.generateLaneColor(this.processData.lanes.length),nodes:[],height:140};return this.processData.lanes.push(t),this.render(this.processData),t}addNode(e,t="process",n="New Node"){const o=this.findLane(e);if(!o)return null;const i={id:`node_${Date.now()}`,text:n,type:t,position:{x:150+200*o.nodes.length,y:o.y+70},color:this.getNodeColor(t),icon:this.getNodeIcon(t)};return o.nodes.push(i),this.render(this.processData),i}getNodeIcon(e){return{start:"🏁",process:"🏊",decision:"🤿",end:"🏆"}[e]||"🏊"}generateLaneColor(e){const t=["#64b5f6","#4fc3f7","#29b6f6","#03a9f4","#039be5","#0288d1"];return t[e%t.length]}updateNode(e,t){const n=this.findNode(e);n&&(Object.assign(n,t),this.render(this.processData))}deleteNode(e){for(const t of this.processData.lanes){const n=t.nodes.findIndex(t=>t.id===e);if(-1!==n)return t.nodes.splice(n,1),this.processData.connections=this.processData.connections.filter(t=>t.from!==e&&t.to!==e),this.render(this.processData),!0}return!1}deleteLane(e){const t=this.processData.lanes.findIndex(t=>t.id===e);if(-1!==t){const e=this.processData.lanes[t].nodes.map(e=>e.id);return this.processData.connections=this.processData.connections.filter(t=>!e.includes(t.from)&&!e.includes(t.to)),this.processData.lanes.splice(t,1),this.render(this.processData),!0}return!1}addConnection(e,t,n=""){const o={from:e,to:t,label:n};return this.processData.connections.push(o),this.render(this.processData),o}getProcessData(){return this.processData}}window.SwimLaneRenderer=n;class o{constructor(){this.svgNamespace="http://www.w3.org/2000/svg"}exportToJSON(e){const t={title:e.title,lanes:e.lanes.map(e=>({id:e.id,name:e.name,color:e.color,height:e.height,nodes:e.nodes.map(e=>({id:e.id,text:e.text,type:e.type,position:{x:e.position.x,y:e.position.y},color:e.color,metadata:e.metadata||{}}))})),connections:e.connections.map(e=>({from:e.from,to:e.to,label:e.label||""})),metadata:e.metadata||{}};return JSON.stringify(t,null,2)}downloadJSON(e,t="swimlane-process.json"){const n=this.exportToJSON(e),o=new Blob([n],{type:"application/json"});this.downloadFile(o,t)}exportToImage(e,t="png",n="swimlane-diagram"){const o=e.cloneNode(!0);this.addStyleToSVG(o);const i=(new XMLSerializer).serializeToString(o),s=new Blob([i],{type:"image/svg+xml;charset=utf-8"});"svg"===t?this.downloadFile(s,`${n}.svg`):"png"===t&&this.convertSVGToPNG(i,n)}addStyleToSVG(e){const t=document.createElementNS(this.svgNamespace,"style");t.textContent="\n            .swimlane {\n                fill: url(#laneGradient);\n                stroke: #1976d2;\n                stroke-width: 2;\n                opacity: 0.8;\n            }\n            .lane-divider {\n                stroke: #ffc107;\n                stroke-width: 3;\n                stroke-dasharray: 10, 5;\n                opacity: 0.8;\n            }\n            .lane-label {\n                fill: #0d47a1;\n                font-size: 18px;\n                font-weight: bold;\n                text-anchor: middle;\n                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            }\n            .process-node {\n                cursor: move;\n            }\n            .node-start {\n                fill: #4caf50;\n                stroke: white;\n                stroke-width: 2;\n            }\n            .node-process {\n                fill: #2196f3;\n                stroke: white;\n                stroke-width: 2;\n            }\n            .node-decision {\n                fill: #ff9800;\n                stroke: white;\n                stroke-width: 2;\n            }\n            .node-end {\n                fill: #f44336;\n                stroke: white;\n                stroke-width: 2;\n            }\n            .node-text {\n                fill: white;\n                font-size: 14px;\n                text-anchor: middle;\n                font-weight: 500;\n                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            }\n            .connection-line {\n                stroke: #1565c0;\n                stroke-width: 2;\n                fill: none;\n            }\n            .connection-label {\n                fill: #0d47a1;\n                font-size: 12px;\n                text-anchor: middle;\n                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            }\n        ",e.insertBefore(t,e.firstChild)}convertSVGToPNG(e,t){const n=new Image,o="data:image/svg+xml;charset=utf-8,"+encodeURIComponent(e);n.onload=()=>{const e=document.createElement("canvas");e.width=2*n.width,e.height=2*n.height;const o=e.getContext("2d");o.fillStyle="white",o.fillRect(0,0,e.width,e.height),o.scale(2,2),o.drawImage(n,0,0),e.toBlob(e=>{this.downloadFile(e,`${t}.png`)},"image/png")},n.src=o}downloadFile(e,t){const n=URL.createObjectURL(e),o=document.createElement("a");o.href=n,o.download=t,document.body.appendChild(o),o.click(),document.body.removeChild(o),URL.revokeObjectURL(n)}exportToPDF(e,t,n="swimlane-diagram.pdf"){alert("PDF export requires additional libraries. For now, please use PNG or SVG export and convert to PDF using external tools.")}exportToCSV(e,t="process-data.csv"){const n=[["Lane","Node ID","Node Text","Node Type","Position X","Position Y"]];e.lanes.forEach(e=>{e.nodes.forEach(t=>{n.push([e.name,t.id,t.text,t.type,t.position.x,t.position.y])})});const o=n.map(e=>e.map(e=>`"${e}"`).join(",")).join("\n"),i=new Blob([o],{type:"text/csv;charset=utf-8;"});this.downloadFile(i,t)}copyToClipboard(e){const t=this.exportToJSON(e);navigator.clipboard&&navigator.clipboard.writeText?navigator.clipboard.writeText(t).then(()=>{this.showNotification("Process data copied to clipboard!")}).catch(e=>{this.fallbackCopyToClipboard(t)}):this.fallbackCopyToClipboard(t)}fallbackCopyToClipboard(e){const t=document.createElement("textarea");t.value=e,t.style.position="fixed",t.style.top="0",t.style.left="0",t.style.opacity="0",document.body.appendChild(t),t.focus(),t.select();try{document.execCommand("copy")?this.showNotification("Process data copied to clipboard!"):this.showNotification("Failed to copy to clipboard","error")}catch(n){this.showNotification("Failed to copy to clipboard","error")}document.body.removeChild(t)}showNotification(e,t="success"){const n=document.createElement("div");n.textContent=e,n.style.cssText=`\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            padding: 15px 20px;\n            background: ${"success"===t?"#4caf50":"#f44336"};\n            color: white;\n            border-radius: 5px;\n            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n            z-index: 10000;\n            animation: slideIn 0.3s ease;\n        `,document.body.appendChild(n),setTimeout(()=>{n.style.animation="slideOut 0.3s ease",setTimeout(()=>{document.body.removeChild(n)},300)},3e3)}generateShareableLink(e){const t=this.exportToJSON(e),n=btoa(encodeURIComponent(t)),o=`${window.location.origin+window.location.pathname}?data=${n}`;return o.length>2e3?(this.showNotification("Process too large for URL sharing. Please use file export.","error"),null):o}}const i=document.createElement("style");i.textContent="\n    @keyframes slideIn {\n        from {\n            transform: translateX(100%);\n            opacity: 0;\n        }\n        to {\n            transform: translateX(0);\n            opacity: 1;\n        }\n    }\n    \n    @keyframes slideOut {\n        from {\n            transform: translateX(0);\n            opacity: 1;\n        }\n        to {\n            transform: translateX(100%);\n            opacity: 0;\n        }\n    }\n",document.head.appendChild(i),window.ProcessExporter=o;class s{constructor(e){this.renderer=e,this.svg=e.svg,this.isDragging=!1,this.draggedNode=null,this.dragOffset={x:0,y:0},this.isConnecting=!1,this.connectionStart=null,this.connectionPreview=null,this.history=[],this.historyIndex=-1,this.maxHistory=50,this.setupEventListeners()}setupEventListeners(){this.svg.addEventListener("mousedown",this.handleMouseDown.bind(this)),this.svg.addEventListener("mousemove",this.handleMouseMove.bind(this)),this.svg.addEventListener("mouseup",this.handleMouseUp.bind(this)),this.svg.addEventListener("dblclick",this.handleDoubleClick.bind(this)),document.addEventListener("keydown",this.handleKeyDown.bind(this))}getSVGPoint(e){const t=this.svg.getBoundingClientRect(),n=this.svg.getAttribute("viewBox");if(n){const[o,i,s,r]=n.split(" ").map(Number),a=s/t.width,d=r/t.height;return{x:o+(e.clientX-t.left)*a,y:i+(e.clientY-t.top)*d}}{const n=this.svg.createSVGPoint();n.x=e.clientX-t.left,n.y=e.clientY-t.top;const o=n.matrixTransform(this.svg.getScreenCTM().inverse());return{x:o.x,y:o.y}}}handleMouseDown(e){const t=e.target.closest(".process-node");t&&!this.isConnecting?this.startDragging(e,t):t&&this.isConnecting&&this.completeConnection(t.getAttribute("data-node-id"));const n=e.target.closest(".resize-handle");n&&this.startResizing(e,n)}handleMouseMove(e){this.isDragging&&this.draggedNode?this.dragNode(e):this.isConnecting&&this.connectionPreview?this.updateConnectionPreview(e):this.isResizing&&this.resizeLane(e)}handleMouseUp(e){this.isDragging?this.stopDragging():this.isResizing&&this.stopResizing()}handleDoubleClick(e){const t=e.target.closest(".process-node");if(t){const e=t.getAttribute("data-node-id");this.editNode(e)}const n=e.target.closest(".swimlane");if(n&&!t){const e=n.parentElement.getAttribute("data-lane-id");this.editLane(e)}}handleKeyDown(e){if(e.ctrlKey||e.metaKey)switch(e.key){case"z":e.preventDefault(),this.undo();break;case"y":e.preventDefault(),this.redo();break;case"s":e.preventDefault(),this.save()}"Delete"===e.key&&this.renderer.selectedNode&&this.deleteSelectedNode()}startDragging(e,t){this.saveState(),this.isDragging=!0,this.draggedNode=t;const n=t.getAttribute("data-node-id"),o=this.renderer.findNode(n),i=this.getSVGPoint(e);this.dragOffset={x:i.x-o.position.x,y:i.y-o.position.y},t.classList.add("node-dragging")}dragNode(e){if(!this.draggedNode)return;const t=this.draggedNode.getAttribute("data-node-id"),n=this.renderer.findNode(t),o=this.getSVGPoint(e);n.position.x=o.x-this.dragOffset.x,n.position.y=o.y-this.dragOffset.y;const i=this.getLaneAtPosition(n.position.y);i&&i!==this.draggedNode.getAttribute("data-lane-id")&&this.moveNodeToLane(t,i),this.renderer.render(this.renderer.processData);const s=this.svg.querySelector(`[data-node-id="${t}"]`);s&&(s.classList.add("node-dragging"),this.draggedNode=s)}stopDragging(){this.draggedNode&&this.draggedNode.classList.remove("node-dragging"),this.isDragging=!1,this.draggedNode=null,this.dragOffset={x:0,y:0}}getLaneAtPosition(e){for(const t of this.renderer.processData.lanes)if(e>=t.y&&e<=t.y+(t.height||140))return t.id;return null}moveNodeToLane(e,t){const n=this.renderer.processData;let o=null;for(const i of n.lanes){const t=i.nodes.findIndex(t=>t.id===e);if(-1!==t){o=i.nodes[t],i.id,i.nodes.splice(t,1);break}}if(o){const e=n.lanes.find(e=>e.id===t);e&&e.nodes.push(o)}}startConnecting(e){this.isConnecting=!0,this.connectionStart=e;const t=this.renderer.findNode(e);t&&(this.connectionPreview=document.createElementNS("http://www.w3.org/2000/svg","line"),this.connectionPreview.classList.add("connection-preview"),this.connectionPreview.setAttribute("x1",t.position.x),this.connectionPreview.setAttribute("y1",t.position.y),this.connectionPreview.setAttribute("x2",t.position.x),this.connectionPreview.setAttribute("y2",t.position.y),this.renderer.connectionsGroup.appendChild(this.connectionPreview))}updateConnectionPreview(e){if(!this.connectionPreview)return;const t=this.svg.getBoundingClientRect(),n=this.svg.getAttribute("viewBox");if(n){const[o,i,s,r]=n.split(" ").map(Number),a=s/t.width,d=r/t.height,l=o+(e.clientX-t.left)*a,c=i+(e.clientY-t.top)*d;this.connectionPreview.setAttribute("x2",l),this.connectionPreview.setAttribute("y2",c)}else{const n=this.svg.createSVGPoint();n.x=e.clientX-t.left,n.y=e.clientY-t.top;const o=n.matrixTransform(this.svg.getScreenCTM().inverse());this.connectionPreview.setAttribute("x2",o.x),this.connectionPreview.setAttribute("y2",o.y)}}completeConnection(e){if(this.connectionStart&&e&&this.connectionStart!==e){this.saveState();const t=prompt("Enter connection label (optional):");this.renderer.addConnection(this.connectionStart,e,t||"")}this.cancelConnection()}cancelConnection(){this.isConnecting=!1,this.connectionStart=null,this.connectionPreview&&(this.connectionPreview.remove(),this.connectionPreview=null)}editNode(e){const t=this.renderer.findNode(e);if(!t)return;const n=document.getElementById("nodeModal"),o=document.getElementById("nodeText"),i=document.getElementById("nodeType"),s=document.getElementById("nodeColor");o.value=t.text,i.value=t.type,s.value=t.color||this.renderer.getNodeColor(t.type),n.style.display="flex",this.renderer.selectedNode=e;const r=document.getElementById("saveNodeBtn"),a=document.getElementById("deleteNodeBtn"),d=document.getElementById("cancelNodeBtn"),l=n.querySelector(".close-btn"),c=()=>{this.saveState(),this.renderer.updateNode(e,{text:o.value,type:i.value,color:s.value,icon:this.renderer.getNodeIcon(i.value)}),n.style.display="none",this.cleanup()},h=()=>{confirm("Are you sure you want to delete this node?")&&(this.saveState(),this.renderer.deleteNode(e),n.style.display="none",this.cleanup())},p=()=>{n.style.display="none",this.cleanup()};this.cleanup=()=>{r.removeEventListener("click",c),a.removeEventListener("click",h),d.removeEventListener("click",p),l.removeEventListener("click",p),this.renderer.selectedNode=null},r.addEventListener("click",c),a.addEventListener("click",h),d.addEventListener("click",p),l.addEventListener("click",p)}editLane(e){const t=this.renderer.findLane(e);if(!t)return;const n=document.getElementById("laneModal"),o=document.getElementById("laneName"),i=document.getElementById("laneColor");o.value=t.name,i.value=t.color,n.style.display="flex",this.renderer.selectedLane=e;const s=document.getElementById("saveLaneBtn"),r=document.getElementById("deleteLaneBtn"),a=document.getElementById("cancelLaneBtn"),d=n.querySelector(".close-btn"),l=()=>{this.saveState(),t.name=o.value,t.color=i.value,this.renderer.render(this.renderer.processData),n.style.display="none",this.cleanup()},c=()=>{confirm("Are you sure you want to delete this lane and all its nodes?")&&(this.saveState(),this.renderer.deleteLane(e),n.style.display="none",this.cleanup())},h=()=>{n.style.display="none",this.cleanup()};this.cleanup=()=>{s.removeEventListener("click",l),r.removeEventListener("click",c),a.removeEventListener("click",h),d.removeEventListener("click",h),this.renderer.selectedLane=null},s.addEventListener("click",l),r.addEventListener("click",c),a.addEventListener("click",h),d.addEventListener("click",h)}startResizing(e,t){this.isResizing=!0,this.resizingLane=t.getAttribute("data-lane-id"),this.resizeStartX=e.clientX,this.resizeStartHeight=this.renderer.findLane(this.resizingLane).height||140}resizeLane(e){if(!this.isResizing)return;const t=this.renderer.findLane(this.resizingLane);if(t){const n=e.clientX-this.resizeStartX;t.height=Math.max(100,this.resizeStartHeight+n),this.renderer.render(this.renderer.processData)}}stopResizing(){this.isResizing=!1,this.resizingLane=null}saveState(){const e=JSON.stringify(this.renderer.processData);this.historyIndex<this.history.length-1&&(this.history=this.history.slice(0,this.historyIndex+1)),this.history.push(e),this.history.length>this.maxHistory?this.history.shift():this.historyIndex++}undo(){if(this.historyIndex>0){this.historyIndex--;const e=JSON.parse(this.history[this.historyIndex]);this.renderer.render(e)}}redo(){if(this.historyIndex<this.history.length-1){this.historyIndex++;const e=JSON.parse(this.history[this.historyIndex]);this.renderer.render(e)}}save(){const e=new CustomEvent("save",{detail:this.renderer.processData});document.dispatchEvent(e)}deleteSelectedNode(){this.renderer.selectedNode&&(this.saveState(),this.renderer.deleteNode(this.renderer.selectedNode),this.renderer.selectedNode=null)}}window.DiagramEditor=s;class r{constructor(e,t,n,o){this.renderer=e,this.editor=t,this.parser=n,this.exporter=o,this.connectMode=!1,this.setupControls(),this.setupDragAndDrop()}setupControls(){document.getElementById("uploadBtn").addEventListener("click",()=>{document.getElementById("fileInput").click()}),document.getElementById("fileInput").addEventListener("change",e=>{this.handleFileUpload(e.target.files[0])}),document.getElementById("loadSampleBtn").addEventListener("click",()=>{this.loadSampleData()}),document.getElementById("addLaneBtn").addEventListener("click",()=>{this.addNewLane()}),document.getElementById("addNodeBtn").addEventListener("click",()=>{this.addNewNode()}),document.getElementById("connectBtn").addEventListener("click",()=>{this.toggleConnectMode()}),document.getElementById("zoomInBtn").addEventListener("click",()=>{this.renderer.zoom(1.2)}),document.getElementById("zoomOutBtn").addEventListener("click",()=>{this.renderer.zoom(.8)}),document.getElementById("fitBtn").addEventListener("click",()=>{this.renderer.fitToScreen()}),document.getElementById("undoBtn").addEventListener("click",()=>{this.editor.undo()}),document.getElementById("redoBtn").addEventListener("click",()=>{this.editor.redo()}),document.getElementById("downloadJsonBtn").addEventListener("click",()=>{this.downloadJSON()}),document.getElementById("downloadImageBtn").addEventListener("click",()=>{this.downloadImage()}),document.addEventListener("save",e=>{this.exporter.downloadJSON(e.detail)})}setupDragAndDrop(){const e=document.getElementById("dropZone");document.getElementById("swimlaneCanvas"),["dragenter","dragover","dragleave","drop"].forEach(t=>{e.addEventListener(t,this.preventDefaults,!1),document.body.addEventListener(t,this.preventDefaults,!1)}),["dragenter","dragover"].forEach(t=>{e.addEventListener(t,()=>{e.classList.add("drag-over")},!1)}),["dragleave","drop"].forEach(t=>{e.addEventListener(t,()=>{e.classList.remove("drag-over")},!1)}),e.addEventListener("drop",e=>{const t=e.dataTransfer.files;t.length>0&&this.handleFileUpload(t[0])},!1),e.addEventListener("click",()=>{document.getElementById("fileInput").click()})}preventDefaults(e){e.preventDefault(),e.stopPropagation()}async handleFileUpload(e){if(e&&e.name.endsWith(".json"))try{const t=await this.parser.loadFromFile(e);this.displayDiagram(t),this.showNotification("Process loaded successfully!")}catch(t){alert("Error loading file: "+t.message)}else alert("Please upload a valid JSON file")}loadSampleData(){const e=this.parser.generateSampleProcess();this.displayDiagram(e),this.showNotification("Sample process loaded!")}displayDiagram(e){document.getElementById("dropZone").style.display="none",document.getElementById("swimlaneCanvas").style.display="block",this.renderer.render(e),this.editor.saveState()}addNewLane(){const e=prompt("Enter lane name:");e&&(this.editor.saveState(),this.renderer.addLane(e),this.showNotification(`Lane "${e}" added!`))}addNewNode(){if(!this.renderer.processData||0===this.renderer.processData.lanes.length)return void alert("Please add a lane first or load a process");const e=this.renderer.processData.lanes;e.map(e=>`${e.name}`).join("\n");const t=prompt(`Select lane (enter number):\n${e.map((e,t)=>`${t+1}. ${e.name}`).join("\n")}`);if(t&&!isNaN(t)){const n=e[parseInt(t)-1];if(n){const e=prompt("Enter node text:")||"New Node",t=prompt("Enter node type (start/process/decision/end):")||"process";this.editor.saveState(),this.renderer.addNode(n.id,t,e),this.showNotification("Node added!")}}}toggleConnectMode(){this.connectMode=!this.connectMode;const e=document.getElementById("connectBtn");this.connectMode?(e.style.background="linear-gradient(135deg, #ff9800 0%, #f57c00 100%)",this.showNotification("Connection mode ON - Click nodes to connect them"),this.setupConnectionMode()):(e.style.background="",this.showNotification("Connection mode OFF"),this.teardownConnectionMode())}setupConnectionMode(){this.connectionHandler=e=>{const t=e.target.closest(".process-node");if(t){const e=t.getAttribute("data-node-id");this.editor.connectionStart?(this.editor.completeConnection(e),this.toggleConnectMode()):(this.editor.startConnecting(e),this.showNotification("Select target node"))}},this.renderer.svg.addEventListener("click",this.connectionHandler)}teardownConnectionMode(){this.connectionHandler&&(this.renderer.svg.removeEventListener("click",this.connectionHandler),this.connectionHandler=null),this.editor.cancelConnection()}downloadJSON(){const e=this.renderer.getProcessData();if(e){const t=prompt("Enter filename:","swimlane-process.json")||"swimlane-process.json";this.exporter.downloadJSON(e,t),this.showNotification("JSON downloaded!")}else alert("No diagram to export")}downloadImage(){if(!this.renderer.getProcessData())return void alert("No diagram to export");const e=prompt("Enter format (png/svg):","png")||"png",t=prompt("Enter filename:","swimlane-diagram")||"swimlane-diagram";this.exporter.exportToImage(this.renderer.svg,e,t),this.showNotification(`${e.toUpperCase()} downloaded!`)}showNotification(e,t="success"){const n=document.createElement("div");n.textContent=e,n.style.cssText=`\n            position: fixed;\n            bottom: 20px;\n            right: 20px;\n            padding: 15px 20px;\n            background: ${"success"===t?"linear-gradient(135deg, #4caf50, #45a049)":"linear-gradient(135deg, #f44336, #da190b)"};\n            color: white;\n            border-radius: 25px;\n            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\n            z-index: 10000;\n            animation: notificationSlide 0.3s ease;\n            font-weight: 500;\n        `,document.body.appendChild(n),setTimeout(()=>{n.style.animation="notificationFade 0.3s ease",setTimeout(()=>{document.body.removeChild(n)},300)},3e3)}}const a=document.createElement("style");a.textContent="\n    @keyframes notificationSlide {\n        from {\n            transform: translateY(100%);\n            opacity: 0;\n        }\n        to {\n            transform: translateY(0);\n            opacity: 1;\n        }\n    }\n    \n    @keyframes notificationFade {\n        from {\n            opacity: 1;\n        }\n        to {\n            opacity: 0;\n        }\n    }\n",document.head.appendChild(a),window.DiagramControls=r;class d{constructor(e){this.app=e}setupKeyboardShortcuts(){document.addEventListener("keydown",e=>{"INPUT"!==e.target.tagName&&"TEXTAREA"!==e.target.tagName&&(e.ctrlKey||e.metaKey?this.handleCtrlShortcuts(e):this.handleRegularShortcuts(e))})}handleCtrlShortcuts(e){switch(e.key.toLowerCase()){case"o":e.preventDefault(),document.getElementById("fileInput")?.click();break;case"s":e.preventDefault(),this.app.controls.downloadJSON();break;case"e":e.preventDefault(),this.app.controls.downloadImage();break;case"l":e.preventDefault(),this.app.controls.addNewLane();break;case"n":e.preventDefault(),this.app.controls.addNewNode();break;case"+":case"=":e.preventDefault(),this.app.renderer.zoom(1.2);break;case"-":case"_":e.preventDefault(),this.app.renderer.zoom(.8);break;case"0":e.preventDefault(),this.app.renderer.fitToScreen()}}handleRegularShortcuts(e){switch(e.key.toLowerCase()){case"c":e.target.closest("input, textarea")||this.app.controls.toggleConnectMode();break;case"h":this.showHelp();break;case"escape":this.app.editor.cancelConnection(),this.app.controls.connectMode&&this.app.controls.toggleConnectMode()}}showHelp(){alert("\n🏊 Swim Lane Diagram - Keyboard Shortcuts\n\nFile Operations:\n• Ctrl+O: Open file\n• Ctrl+S: Save as JSON\n• Ctrl+E: Export as image\n\nEditing:\n• Ctrl+L: Add new lane\n• Ctrl+N: Add new node\n• C: Toggle connection mode\n• Delete: Delete selected node\n• Ctrl+Z: Undo\n• Ctrl+Y: Redo\n\nView:\n• Ctrl+Plus: Zoom in\n• Ctrl+Minus: Zoom out\n• Ctrl+0: Fit to screen\n\nOther:\n• H: Show this help\n• Escape: Cancel current operation\n• Double-click node: Edit node\n• Double-click lane: Edit lane\n• Drag nodes to move them\n        ")}}class l{constructor(e){this.app=e}checkUrlParams(){const e=new URLSearchParams(window.location.search).get("data");e&&this.loadSharedDiagram(e)}loadSharedDiagram(e){try{const t=decodeURIComponent(atob(e)),n=JSON.parse(t),o=this.app.parser.parseProcess(n);this.app.controls.displayDiagram(o)}catch(t){this.showErrorMessage("Failed to load shared diagram. The link may be corrupted.")}}createShareableUrl(e){const t=JSON.stringify(e),n=btoa(encodeURIComponent(t));return`${window.location.origin+window.location.pathname}?data=${n}`}showErrorMessage(e){alert(e)}}class c{constructor(){this.svg=document.getElementById("diagramSvg"),this.parser=new t,this.renderer=new n(this.svg),this.exporter=new o,this.editor=new s(this.renderer),this.controls=new r(this.renderer,this.editor,this.parser,this.exporter),this.keyboardManager=new d(this),this.urlParamsHandler=new l(this),this.init()}init(){this.urlParamsHandler.checkUrlParams(),this.keyboardManager.setupKeyboardShortcuts()}}document.addEventListener("DOMContentLoaded",()=>{const e=new c;window.swimLaneApp=e})}}});
//# sourceMappingURL=index-legacy-7wYCpIq9.js.map
